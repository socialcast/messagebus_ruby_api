= Messagebus Ruby API

== Installation

  gem install messagebus_ruby_api

== Basic Use

=== Start by requiring MessabusApi:

    require 'messagebus_ruby_api'

=== Then create an instance of the Messagebus class with your account information

    client = MessagebusApi::Messagebus.new("<INSERT_YOUR_API_KEY>")

=== Sending a single message

==== Create Required Parameters

      params = { :toEmail => 'apitest1@messagebus.com',
        :toName => 'EmailUser',
        :fromEmail => 'api@messagebus.com',
        :fromName => 'API',
        :subject => 'Unit Test Message',
        :customHeaders => ["sender"=>"apitest1@messagebus.com"],
        :plaintextBody => 'This message is only a test sent by the Ruby MessageBus client library.',
        :htmlBody => "<html><body>This message is only a test sent by the Ruby MessageBus client library.</body></html>",
        :tags => ['RUBY']
      }

==== Send the message

     client.add_message(params)

== Examples

    The provided examples illustrate how to:
    - send a single email message in the simplest way
    - send one or more emails (where the email body is passed with the api call)
    - send one or more templated emails (where a key referencing a previously stored email body is passed with the api call)
    - create a mailing list, add and delete mailing list entries and list the existing mailing lists
    - list recent email unsubscribes
    - list recent email statistics
    - list recent delivery errors

== Older Versions

If you are using the old api with the text OK:<UUID> responses, please be sure to get the 'v1' branch
If you are using the old api with the 'body' parameter (instead of the new 'plaintextBody' and 'htmlBody' parameters), please be sure to get the 'v0' branch

== Tests
  To run the tests, issue the following command from the root of the project:
  bundle exec rspec spec/messagebus_ruby_api/client_spec.rb
== More info
  Contact MessageBus if you have questions or problems (https://www.messagebus.com/contact)
